<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

// Adjusts the view to the screen size on iOS and Android
view_adjust();

// Variables declarations
offset = 0;
height = 0;
dragy = 0;
sidebar_alpha = 0;
mouse_yprevious = device_mouse_y(0);
pressed = -1;
released = 1000000;
banner_height = 72;
box_height = 96;
bounce_speed = 8; // A lower number makes it bounce back faster, higher number makes it slower

// Texts to be used on the item list
txt[0] = "Dashing through the snow,";
txt[1] = "In a one horse open sleigh";
txt[2] = "Over the fields we go";
txt[3] = "Laughing all the way.";
txt[4] = "bells on bob tail ring";
txt[5] = "making spirits bright";
txt[6] = "What fun it is to ride and sing";
txt[7] = "A sleighing song tonight.";
txt[8] = "-------------------------";
txt[9] = "Oh jingle bells jingle bells";
txt[10] = "jingle all the way!";
txt[11] = "Oh what fun";
txt[12] = "it is to ride";
txt[13] = "In a one horse open sleigh, Hey!";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag
// Do not edit this unless you know what you're doing! 
// Reply: Bah! No one knows what they are doing
/*
 This is all for draggin porpouses
 We set the distance between this step and the step before, then
 we add this value to the offset from the item list
*/

if (mouse_check_button_pressed(mb_left)) {
    mouse_yprevious = mouse_y;
}

if (mouse_check_button(mb_left)) {
    dragy = mouse_y - mouse_yprevious;
    sidebar_alpha = 5;
}
else {
    dragy *= 0.85;// Slow it down if we are not pressing anything
    sidebar_alpha = max(0, sidebar_alpha - 0.05);// Fade out the sidebar
}

offset += dragy;
mouse_yprevious = mouse_y;

/*
 Here we take care we are not moving the offset too high or too low
 making the items stay always inside the view 
*/
if (offset &gt; 0 &amp;&amp; !mouse_check_button(mb_left))
    offset -= max(1, point_distance(0, 0, 0, offset)/bounce_speed);
    //offset = 0;
   
if (height &gt; view_hview-banner_height &amp;&amp; !mouse_check_button(mb_left)) {
    if (offset &lt; -height + view_hview - banner_height)
        offset += max(1, point_distance(0, (-height + view_hview - banner_height), 0, offset)/bounce_speed);
        //offset = -height + view_hview - banner_height;
}
if (height &lt; view_hview - banner_height)
    offset = 0;

// Dragy fix
if (dragy &gt; 0 &amp;&amp; dragy &lt; 1)
    dragy = 0;
if (dragy &lt; 0 &amp;&amp; dragy &gt; -1)
    dragy = 0;

// You shouldnt need to understand this, unless you found a bug and want to fix it :)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu

// Set fonts
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

// Clear the view
col = make_color_rgb(90,90,90);
draw_rectangle_color(view_xview, view_yview, view_xview+view_wview, view_yview+view_hview, col, col, col, col, 0);

// Set the starting y offset and height
yy = view_yview + banner_height + offset;
height = 0;
selected_item = -1;

/*
 Start Loop
 Will repeat for the ammount of items in the txt[] array
*/

for (var i = 0; i &lt; array_length_1d(txt);  i++) {
    ii = 0;
    // This will check if we are currently pressing this item
    if point_in_rectangle(device_mouse_x(0), device_mouse_y(0), view_xview, yy, view_xview+view_wview, yy+96) {
        if (mouse_check_button(mb_left))
            ii = 1;// Set the image index
        if (mouse_check_button_pressed(mb_left))
            pressed = mouse_y;// For drag or tap recognition
        if (mouse_check_button_released(mb_left))
            released = mouse_y;// For drag or tap recognition
    }
    // Draw the current item
    draw_sprite_ext(spr_item, ii, view_xview, yy, view_wview, 1, 0, c_white, 1);
    
    // Draw the text corresponding to this item
    draw_text(view_xview+96, yy+48, txt[i]);
    // Here you can draw anything you want for this item, even sprites or animations
        
    // Increase offset and height
    yy += box_height;
    height += box_height;
    /*
     NOTE: If you want to change the height of the items
     change the value from the two variables above (96px)
    */
    
    // Check if we tapped with less than 10px of drag
    if (point_distance(pressed, 0, released, 0) &lt; 10) {
        selected_item = i;
        released = -99999;
    }
}
// Reset variables
released = -9999;

// Check if we have selected any item
if (selected_item != -1) {
    show_message("You selected the item no. " + string(selected_item) + "!");
}


// Draw the position indicator bar on the right
bar_pos = ((view_hview-banner_height)/height) * offset*-1;
bar_hei = ((view_hview-banner_height)/height) * (view_hview-banner_height)
draw_set_color(c_white);
draw_set_alpha(sidebar_alpha);
draw_rectangle(view_xview+view_wview, view_yview+banner_height+bar_pos, view_xview+view_wview-8, view_yview+banner_height+bar_pos+bar_hei, 0);

// Draw the banner on top
draw_set_alpha(1);
draw_sprite_ext(spr_banner, 0, view_xview, view_yview, view_wview, 1, 0, c_white, 1);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(view_xview+(view_wview/2), view_yview+36, "Item list example for mobile devices");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
